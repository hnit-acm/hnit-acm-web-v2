server {
  listen 80;
  server_name localhost;

  return 301 https://$host$request_uri;
}

# HTTPS server
#
server {
  # Enable QUIC and HTTP/3.
  listen 443 quic reuseport;
  # Ensure that HTTP/2 is enabled for the server
  listen 443 ssl http2;
  server_name hnit-acm.nekilc.cn;

  http2_push_preload on;

  brotli_static on;
  brotli on;
  brotli_types text/plain text/css application/json application/javascript application/x-javascript text/javascript;
  brotli_comp_level 4;

  # Enable TLS versions (TLSv1.3 is required for QUIC).
  ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;

  ssl_certificate /home/app/hnit-acm.nekilc.cn.pem;
  ssl_certificate_key /home/app/hnit-acm.nekilc.cn.key;

  ssl_session_cache shared:SSL:1m;
  ssl_session_timeout 5m;

  # Enable TLSv1.3's 0-RTT. Use $ssl_early_data when reverse proxying to
  # prevent replay attacks.
  #
  # @see: http://nginx.org/en/docs/http/ngx_http_ssl_module.html#ssl_early_data
  ssl_early_data on;
  ssl_ciphers HIGH:!aNULL:!MD5;
  ssl_prefer_server_ciphers on;

  # Add Alt-Svc header to negotiate HTTP/3.
  add_header alt-svc 'h3=":443"; ma=86400';
  # Debug 0-RTT.
  add_header X-Early-Data $tls1_3_early_data;

  add_header x-frame-options "deny";
  add_header Strict-Transport-Security "max-age=31536000" always;

  location / {
      root   /home/app;
      index  index.html index.htm;
      try_files $uri $uri/ @router;
  }

  location @router {
      rewrite ^.*$ /index.html last; # 接到截取的uri 并按一定规则重写uri和vue路由
  }
}

map $ssl_early_data $tls1_3_early_data {
  "~." $ssl_early_data;
  default "";
}